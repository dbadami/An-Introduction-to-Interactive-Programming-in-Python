Miniproject 8 - Keeping Track of Multiple Objects and Missiles
Python Code and Working Link

Link: http://www.codeskulptor.org/#user7-NmRn6V3Inw-1.py

Python Code
------------

# program template for Spaceship
import simplegui
import math
import random

# globals for user interface
width = 800
height = 600
score = 0
lives = 3
time = 0
asteroids = []
n=0

class ImageInfo:
    def __init__(self, center, size, radius = 0, lifespan = None, animated = False):
        self.center = center
        self.size = size
        self.radius = radius
        if lifespan:
            self.lifespan = lifespan
        else:
            self.lifespan = float('inf')
        self.animated = animated
    def get_center(self):
        return self.center
    def get_size(self):
        return self.size
    def get_radius(self):
        return self.radius
    def get_lifespan(self):
        return self.lifespan
    def get_animated(self):
        return self.animated

# asteroid images - asteroid_blue.png, asteroid_brown.png, asteroid_blend.png
asteroid_info = ImageInfo([45, 45], [90, 90], 40)
asteroid_image = simplegui.load_image("http://commondatastorage.googleapis.com/codeskulptor-assets/lathrop/asteroid_blue.png")

class Sprite:
    def __init__(self, pos, vel, ang, ang_vel, image, info, sound = None):
        self.pos = [pos[0],pos[1]]
        self.vel = [vel[0],vel[1]]
        self.angle = ang
        self.angle_vel = ang_vel
        self.image = image
        self.image_center = info.get_center()
        self.image_size = info.get_size()
        self.radius = info.get_radius()
        self.lifespan = info.get_lifespan()
        self.animated = info.get_animated()
        self.age = 0
        if sound:
            sound.rewind()
            sound.play()
    def draw(self, canvas):
        canvas.draw_image(self.image, self.image_center, self.image_size, self.pos, self.image_size, self.angle)
        #Making sure the asteroid is wrapped around the canvas
        if self.pos[0]>800 or self.pos[0]<0:
            self.pos[0] = self.pos[0]%800
        if self.pos[1]>600 or self.pos[1]<0:
            self.pos[1]=self.pos[1]%600
    def update(self):
        self.pos[0]+=self.vel[0]
        self.pos[1]+=self.vel[1]
        self.angle += self.angle_vel
        pass
    
def keydown(key):
    global n
    if key==simplegui.KEY_MAP["space"]:
        print len(asteroids)
        n=1
        for x in range(n):
            rock_position = [random.randrange(0,801), random.randrange(0,601)]
            rock_velocity = [random.randrange(-5,5), random.randrange(-5,5)]
            rock_angle = random.randrange(-5,5)/60
            a_rock = Sprite(rock_position, rock_velocity, 0, rock_angle, asteroid_image, asteroid_info)
            asteroids.append(a_rock)

def draw(canvas):
    for asteroid in asteroids:
        asteroid.draw(canvas)
        asteroid.update()

frame = simplegui.create_frame("Asteroids", width, height)
frame.set_draw_handler(draw)
frame.set_keydown_handler(keydown)
frame.start()